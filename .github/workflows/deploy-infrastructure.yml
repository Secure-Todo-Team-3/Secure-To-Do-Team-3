name: Terraform Apply (Infrastructure)

on:
  workflow_dispatch:


jobs:
  terraform_apply:
    name: "Terraform Apply"
    runs-on: ubuntu-latest
    permissions:
      id-token: write 
      contents: read  

    env:
      TF_WORKING_DIR: ./terraform
      TF_VAR_db_username: ${{ secrets.DB_USERNAME }}
      TF_VAR_db_password: ${{ secrets.DB_PASSWORD }}
      TF_VAR_db_username_value: ${{ secrets.DB_USERNAME }}
      TF_VAR_db_password_value: ${{ secrets.DB_PASSWORD }}
      TF_VAR_db_name_value: ${{ secrets.RDS_DB_NAME }}
      TF_VAR_jwt_private_key_base64_value: ${{ secrets.JWT_PRIVATE_KEY_BASE64_VALUE }}
      TF_VAR_jwt_public_key_base64_value: ${{ secrets.JWT_PUBLIC_KEY_BASE64_VALUE }}
      TF_VAR_password_pepper_string: ${{ secrets.PASSWORD_PEPPER_STRING }}
      TF_VAR_field_encryption_key_value: ${{ secrets.FIELD_ENCRYPTION_KEY_VALUE }}
      TF_VAR_acm_certificate_arn: ${{ secrets.ACM_CERTIFICATE_ARN }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::263883060207:role/github-actions-deploy-role
          aws-region: eu-west-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.0 

      - name: Terraform Init
        id: init
        run: terraform init -upgrade
        working-directory: ${{ env.TF_WORKING_DIR }}

      - name: Terraform Validate
        id: validate
        run: terraform validate
        working-directory: ${{ env.TF_WORKING_DIR }}

      - name: Terraform Plan
        run: terraform plan -no-color -input=false
        working-directory: ${{ env.TF_WORKING_DIR }}
         
      - name: Terraform Apply
        id: apply
        run: terraform apply -auto-approve -input=false
        working-directory: ${{ env.TF_WORKING_DIR }}
