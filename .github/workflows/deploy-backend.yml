
name: Backend Deploy (Spring Boot)

on:
  push:
    branches:
      - main
    paths:
   
      - 'secure-team-3-todo-api/**' 
      - 'db/**'      
      - 'terraform/app_source/Dockerrun.aws.json' 

env:
  EB_APP_NAME: TodoApp
  EB_ENV_NAME: TodoApp-Env
  AWS_REGION: eu-west-1
  RDS_DB_INSTANCE_IDENTIFIER: todo-team-db

jobs:
  deploy:
    name: "Build and Deploy Spring Boot App"
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
      
          role-to-assume: arn:aws:iam::263883060207:role/github-actions-deploy-role
          aws-region: ${{ env.AWS_REGION }}

      - name: Get RDS DB Endpoint
        id: rds_endpoint_step
        run: |
          DB_ENDPOINT=$(aws rds describe-db-instances \
            --db-instance-identifier ${{ env.RDS_DB_INSTANCE_IDENTIFIER }} \
            --query 'DBInstances[0].Endpoint.Address' \
            --output text)
          echo "DB_ENDPOINT=$DB_ENDPOINT" >> "$GITHUB_ENV"
          echo "Fetched RDS DB Endpoint: $DB_ENDPOINT"

      - name: Setup Java for Build and Migration
        uses: actions/setup-java@v4
        with:
         
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'

      - name: Run Flyway Migrations
       
        run: |
          cd backend/ # Preserve as requested. Please verify this path for Flyway execution.
          mvn clean flyway:migrate \
            -Dflyway.url="jdbc:postgresql://${{ env.DB_ENDPOINT }}:5432/${{ secrets.RDS_DB_NAME }}" \
            -Dflyway.user="${{ secrets.DB_USERNAME }}" \
            -Dflyway.password="${{ secrets.DB_PASSWORD }}" \
            -Dflyway.locations="filesystem:../db"
        env:
          DB_ENDPOINT: ${{ env.DB_ENDPOINT }}
          DB_USER: ${{ secrets.RDS_DB_USERNAME }}
          DB_NAME: ${{ secrets.RDS_DB_NAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}

      - name: Build Spring Boot Application
        
        run: |
          cd secure-team-3-todo-api/ # Preserve as requested.
          mvn clean install

      - name: Create EB Deployment Bundle
     
        run: |
          cd secure-team-3-todo-api/ 

         
          JAR_FILE=$(find target -name "*.jar" -type f -print -quit)
          if [ -z "$JAR_FILE" ]; then
            echo "Error: Spring Boot JAR file not found in target/ within secure-team-3-todo-api/."
            exit 1
          fi
          echo "Found JAR: $JAR_FILE"

        
          DOCKERRUN_PATH="../terraform/app_source/Dockerrun.aws.json"
          if [ ! -f "$DOCKERRUN_PATH" ]; then
            echo "Error: Dockerrun.aws.json not found at $DOCKERRUN_PATH (relative to secure-team-3-todo-api/)."
            exit 1
          fi
          echo "Found Dockerrun.aws.json at: $DOCKERRUN_PATH"

          
          zip -r ../application.zip "$JAR_FILE" "$DOCKERRUN_PATH"
          echo "Created application.zip at repository root ($GITHUB_WORKSPACE/)."

      - name: Deploy to Elastic Beanstalk
        uses: aws/elastic-beanstalk-action@v1
        with:
        
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: ${{ env.EB_APP_NAME }}
          environment_name: ${{ env.EB_ENV_NAME }}
          version_label: github-sha-${{ github.sha }}
          region: ${{ env.AWS_REGION }}
        
          deployment_package: application.zip